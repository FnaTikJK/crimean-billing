name: Docker Image CI

on:
  push:
    branches: [ "main" ]

env:
  CR_REGISTRY: crpurgn9rui23mqmfigp
  BACKEND_IMAGE: cr.yandex/crpurgn9rui23mqmfigp/backend:last
  FRONT_IMAGE: cr.yandex/crpurgn9rui23mqmfigp/front:last
  YC_FOLDER_ID: b1g2bgj4m7cqfi0s16bp

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Yandex Cloud Login
      uses: yc-actions/yc-cr-login@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

    - name: Build and push back
      env:
        BACKEND_IMAGE_TAG: ${{ env.BACKEND_IMAGE }}
      run: |
        cd ./API
        docker build -f API/Dockerfile --force-rm -t $BACKEND_IMAGE_TAG .
        docker push $BACKEND_IMAGE_TAG


  build-front:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Yandex Cloud Login
      uses: yc-actions/yc-cr-login@v1
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}

    - name: Build and push front
      env:
        FRONT_IMAGE_TAG: ${{ env.FRONT_IMAGE }}
      run: |
        cd ./Client/client
        docker build -f Dockerfile -t $FRONT_IMAGE_TAG .
        docker push $FRONT_IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    #needs: [ "build-backend", "build-front" ]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Deploy
      uses: yc-actions/yc-coi-deploy@v1
      env:
        BACKEND_IMAGE: ${{ env.BACKEND_IMAGE }}
        FRONT_IMAGE: ${{ env.FRONT_IMAGE }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        SSH_KEY: ${{ secrets.SSH_KEY }}
      with:
        yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
        folder-id: ${{ env.YC_FOLDER_ID }}
        vm-name: git-actions
        vm-service-account-id: ajeoqia1ae0o837srf5p
        vm-cores: 2
        vm-memory: 2Gb
        vm-core-fraction: 50
        vm-subnet-id: fl88mvrmcl779251ivq2
        user-data-path: './user-data.yaml'
        docker-compose-path: './docker-compose.yaml'